<?php
/**
 * @file
 */

/**
 * Implements hook_menu().
 */
function easyddb_xml_events_menu() {
  $items = array();

  $items['lib/%/xml/events'] = array(
    'title' => 'Easyddb xml events',
    'description' => 'Render library events in xml format',
    'page callback' => 'easyddb_xml_events_process',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * @param int $library.
 */
function easyddb_xml_events_process($library) {
  $library = node_load($library);

  $query = db_select('og_membership', 'ogm');
  $query->fields('ogm', array('etid'));
  $query->condition('ogm.gid', (int)$library->nid, '=');
  $query->condition('ogm.entity_type', 'node', '=');

  $result = $query->execute()->fetchAll();

  $xml_obj = new SimpleXMLElement('<xml/>');
  $xml_obj->addChild('library', $library->title);

  foreach ($result as $item) {
    $node = node_load($item->etid);
    if ($node->type == 'ding_event') {
      $event = $xml_obj->addChild('event');
      $event->addChild('title', $node->title);
      $event->addChild('startDateTime', $node->field_ding_event_date[LANGUAGE_NONE][0]['value']);
      $event->addChild('endDateTime', $node->field_ding_event_date[LANGUAGE_NONE][0]['value2']);
      $event->addChild('location', implode($node->field_ding_event_location[LANGUAGE_NONE][0]));
    }
  }

  header('Content-type: text/xml');
  print $xml_obj->asXML();
}
